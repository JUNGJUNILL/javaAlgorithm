package 프로그래머스_실제코딩테스트;

public class P001 {
	
	/*
문제 설명
구슬을 장치에 떨어트렸을 때, 구슬이 바닥으로 떨어지는 시작 위치는 몇 개인지 세려고 합니다.

장치는 1 x 1 칸으로 이루어진 N x N 크기 정사각 격자 형태입니다. 각 칸에는 #, >, <, *이 적혀있습니다. 
구슬은 #을 만나면 아래로 한 칸, >을 만나면 오른쪽으로 한 칸, <를 만나면 왼쪽으로 한 칸 이동합니다. 
또, 구슬은 *을 처음 만나면 아래로 한 칸 이동하며, 두 번째로 *를 만나면 그 자리에서 멈춥니다.

다음은 장치가 6 x 6 크기인 경우의 예시입니다.

pinball_grid_1.png

예를 들어 1번 위치에서 구슬을 떨어 뜨릴 경우 구슬이 붉은 선을 따라 이동한 후 바닥으로 떨어집니다.

pinball_grid_2.png

그러나 위 그림과 같이 3번 위치에서 구슬을 떨어뜨리면 두 번째로 만난 * 칸에서 멈춥니다.

각 칸에 적힌 기호를 문자열 형태로 담은 배열 drum이 매개변수로 주어질 때, 
구슬이 장치를 완전히 빠져나가 바닥으로 떨어지는 시작 위치는 총 몇 개인지
 return 하도록 solution 함수를 완성해주세요.

제한사항
drum 배열의 길이는 5 이상 100 이하입니다.
drum 배열의 원소는 장치의 각 행에 적힌 기호를 나타내는 문자열입니다.
각 문자열의 길이는 drum 배열의 길이와 같습니다.
문자열은 #, >, <, *로만 이루어져 있습니다.
구슬이 장치 좌, 우측 경계를 벗어나는 경우는 입력으로 주어지지 않습니다.
>와 <가 서로 마주 보아서, 구슬이 떨어지지 않고 무한히 움직이는 경우는 입력으로 주어지지 않습니다.


입출력 예
drum	return
["######",">#*###","####*#","#<#>>#",">#*#*<","######"]	4
입출력 예 설명
입출력 예 #1

구슬을 4번 위치에서 떨어뜨린 예시는 다음과 같습니다.

pinball_grid_3.png

구슬이 바닥에 떨어지는 위치는 1번, 2번, 4번, 6번 위치로 총 4개입니다.
	 
*/
	
	  public static int solution(String[] drum) {
	  
		  int answer = -1;
	      return answer; 
	  }

	public static void main(String[] args) {

	}

}
